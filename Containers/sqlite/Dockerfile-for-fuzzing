#Basic Image (ubuntu 21.04 предоставляет наиболее актуальную версию llvm/clang для работы AFL++)
FROM ubuntu:21.04 AS base_image

#Сведения о контейнере
LABEL maintainer="a.irkhin@gardatech.ru"
LABEL version="1.0"
LABEL description="Докер контейнер для фаззинга sqlite с применением AFL++ на Ubuntu 21.04"

#запускаем обновление репозитория и устанавливаем с временной зоной tzdata (необходимо для следующих пакетов)
RUN apt-get update && DEBIAN_FRONTEND="noninteractive" TZ="Russia/Moscow" apt-get install -y tzdata

#Ставим пакеты для AFL++.
#На 1-2 строчке ставим необходимые пакеты для AFL++ (они описаны в документации). На данный момент рекомендуется версия clang >=11, в репозитории 12я
#На 3 строчке ставим необходимые пакеты для сборки sqlite
#На 4 строчке ставим tmux (необходимо для создания скриншота)
RUN apt-get update && apt-get install -y --fix-missing build-essential python3-dev automake git flex bison libglib2.0-dev libpixman-1-dev python3-setuptools \ 
    lld llvm llvm-dev clang  \
    tcl locales wget \
    tmux

#Ставим необходимые пакеты для AFL++ (эти плагины для gcc написаны в документации AFL++)
RUN apt-get install -y gcc-$(gcc --version|head -n1|sed 's/.* //'|sed 's/\..*//')-plugin-dev libstdc++-$(gcc --version|head -n1|sed 's/.* //'|sed 's/\..*//')-dev

#Для корректной работы рекомендуется настроить локализацию
RUN locale-gen en_US.UTF-8

#ставим AFL++. source-only означает что необходима сборка только для фаззинга проектов с кодом
WORKDIR /afl
RUN wget https://github.com/AFLplusplus/AFLplusplus/archive/refs/tags/3.14c.tar.gz && \
    tar -xf 3.14c.tar.gz && \
    cd AFLplusplus-3.14c && \
    make source-only && make install

#настройка переменных окружения
ENV CC=afl-cc
ENV CXX=afl-cc
ENV LD=afl-cc

#Загружаем сведения по санитайзерам из аргументов
ARG SANITIZER1
ARG SANITIZER2
ENV $SANITIZER1=1
ENV $SANITIZER2=1

#сборка sqlite
WORKDIR /sourcecode
RUN git clone https://github.com/sqlite/sqlite && cd sqlite && \
    ./configure --disable-shared && make -j 4 sqlite3.c

#сборка фаззинг обёртки для sqlite
WORKDIR /fuzzingapp
RUN cp /sourcecode/sqlite/sqlite3.[ch] .; cp /sourcecode/sqlite/tool/fuzzershell.c .
RUN afl-cc -O3 -o fuzzershell -DSQLITE_THREADSAFE=0 -DSQLITE_ENABLE_LOAD_EXTENSION=0 -DSQLITE_DEBUG -DSQLITE_OMIT_RANDOMNESS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_RTREE -I. fuzzershell.c sqlite3.c -ldl

#передача тестовых образцов в докер контейнер
RUN mkdir corpus
COPY corpus/ ./corpus


CMD tmux new "export AFL_EXIT_ON_TIME="\$AFL_EXIT_ON_TIME" && \ 
afl-fuzz -i corpus/ -o out -T sqlite -- ./fuzzershell --oom --autovacuum && \ 
tmux capture-pane -J -p -t \$TMUX_PANE > out/tmux_output.txt && \ 
mkdir out/queue-minimized && \ 
afl-cmin -i out/default/queue -o out/queue-minimized -- ./fuzzershell --oom --autovacuum"
